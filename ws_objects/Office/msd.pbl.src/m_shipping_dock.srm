$PBExportHeader$m_shipping_dock.srm
forward
global type m_shipping_dock from menu
end type
type m_operation from menu within m_shipping_dock
end type
type m_createpallet from menu within m_operation
end type
type m_manulscan from menu within m_operation
end type
type m_delete from menu within m_operation
end type
type m_reconcile from menu within m_operation
end type
type m_note from menu within m_operation
end type
type m_relable from menu within m_operation
end type
type m_printsetup from menu within m_operation
end type
type m_shippinginfo from menu within m_operation
end type
type m_print from menu within m_operation
end type
type m_certs from menu within m_print
end type
type m_destinationlabel from menu within m_print
end type
type m_picklist from menu within m_print
end type
type m_packlist from menu within m_print
end type
type m_pltlabel from menu within m_print
end type
type m_customform from menu within m_print
end type
type m_print from menu within m_operation
m_certs m_certs
m_destinationlabel m_destinationlabel
m_picklist m_picklist
m_packlist m_packlist
m_pltlabel m_pltlabel
m_customform m_customform
end type
type m_scantruck from menu within m_operation
end type
type m_verifyscan from menu within m_operation
end type
type m_custom1 from menu within m_operation
end type
type m_custom2 from menu within m_operation
end type
type m_custom3 from menu within m_operation
end type
type m_exit from menu within m_operation
end type
type m_operation from menu within m_shipping_dock
m_createpallet m_createpallet
m_manulscan m_manulscan
m_delete m_delete
m_reconcile m_reconcile
m_note m_note
m_relable m_relable
m_printsetup m_printsetup
m_shippinginfo m_shippinginfo
m_print m_print
m_scantruck m_scantruck
m_verifyscan m_verifyscan
m_custom1 m_custom1
m_custom2 m_custom2
m_custom3 m_custom3
m_exit m_exit
end type
type m_edit from menu within m_shipping_dock
end type
type m_window from menu within m_shipping_dock
end type
type m_tile from menu within m_window
end type
type m_layer from menu within m_window
end type
type m_cascade from menu within m_window
end type
type m_- from menu within m_window
end type
type m_arrangeicons from menu within m_window
end type
type m_window from menu within m_shipping_dock
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m_- m_-
m_arrangeicons m_arrangeicons
end type
type m_help from menu within m_shipping_dock
end type
type m_contents from menu within m_help
end type
type m_aboutthemonitor from menu within m_help
end type
type m_help from menu within m_shipping_dock
m_contents m_contents
m_aboutthemonitor m_aboutthemonitor
end type
global type m_shipping_dock from menu
m_operation m_operation
m_edit m_edit
m_window m_window
m_help m_help
end type
end forward

global type m_shipping_dock from menu
m_operation m_operation
m_edit m_edit
m_window m_window
m_help m_help
end type
global m_shipping_dock m_shipping_dock

type variables
Boolean bPalletVisible    //Whether to show pallet datawin
end variables

on m_shipping_dock.create
m_shipping_dock=this
call super::create
this.m_operation=create m_operation
this.m_edit=create m_edit
this.m_window=create m_window
this.m_help=create m_help
this.Item[UpperBound(this.Item)+1]=this.m_operation
this.Item[UpperBound(this.Item)+1]=this.m_edit
this.Item[UpperBound(this.Item)+1]=this.m_window
this.Item[UpperBound(this.Item)+1]=this.m_help
end on

on m_shipping_dock.destroy
call super::destroy
destroy(this.m_operation)
destroy(this.m_edit)
destroy(this.m_window)
destroy(this.m_help)
end on

type m_operation from menu within m_shipping_dock
m_createpallet m_createpallet
m_manulscan m_manulscan
m_delete m_delete
m_reconcile m_reconcile
m_note m_note
m_relable m_relable
m_printsetup m_printsetup
m_shippinginfo m_shippinginfo
m_print m_print
m_scantruck m_scantruck
m_verifyscan m_verifyscan
m_custom1 m_custom1
m_custom2 m_custom2
m_custom3 m_custom3
m_exit m_exit
end type

on m_operation.create
call super::create
this.text = "&File"
this.m_createpallet=create m_createpallet
this.m_manulscan=create m_manulscan
this.m_delete=create m_delete
this.m_reconcile=create m_reconcile
this.m_note=create m_note
this.m_relable=create m_relable
this.m_printsetup=create m_printsetup
this.m_shippinginfo=create m_shippinginfo
this.m_print=create m_print
this.m_scantruck=create m_scantruck
this.m_verifyscan=create m_verifyscan
this.m_custom1=create m_custom1
this.m_custom2=create m_custom2
this.m_custom3=create m_custom3
this.m_exit=create m_exit
this.Item[UpperBound(this.Item)+1]=this.m_createpallet
this.Item[UpperBound(this.Item)+1]=this.m_manulscan
this.Item[UpperBound(this.Item)+1]=this.m_delete
this.Item[UpperBound(this.Item)+1]=this.m_reconcile
this.Item[UpperBound(this.Item)+1]=this.m_note
this.Item[UpperBound(this.Item)+1]=this.m_relable
this.Item[UpperBound(this.Item)+1]=this.m_printsetup
this.Item[UpperBound(this.Item)+1]=this.m_shippinginfo
this.Item[UpperBound(this.Item)+1]=this.m_print
this.Item[UpperBound(this.Item)+1]=this.m_scantruck
this.Item[UpperBound(this.Item)+1]=this.m_verifyscan
this.Item[UpperBound(this.Item)+1]=this.m_custom1
this.Item[UpperBound(this.Item)+1]=this.m_custom2
this.Item[UpperBound(this.Item)+1]=this.m_custom3
this.Item[UpperBound(this.Item)+1]=this.m_exit
end on

on m_operation.destroy
call super::destroy
destroy(this.m_createpallet)
destroy(this.m_manulscan)
destroy(this.m_delete)
destroy(this.m_reconcile)
destroy(this.m_note)
destroy(this.m_relable)
destroy(this.m_printsetup)
destroy(this.m_shippinginfo)
destroy(this.m_print)
destroy(this.m_scantruck)
destroy(this.m_verifyscan)
destroy(this.m_custom1)
destroy(this.m_custom2)
destroy(this.m_custom3)
destroy(this.m_exit)
end on

type m_createpallet from menu within m_operation
end type

event clicked;If w_shipping_dock.dw_pallet_info.Visible = TRUE then
//	m_createpallet.ToolbarItemText         = "Crt Plt"
//	m_createpallet.ToolbarItemName         = "CreateRunTime!"
//	m_delete.ToolbarItemVISIBLE            = TRUE
//	m_scantruck.ToolbarItemVisible         = TRUE
//	m_print.ToolbarItemVISIBLE             = TRUE
//	m_print.Item[1].ToolBarItemVisible     = TRUE
//	m_print.Item[2].ToolBarItemVisible     = TRUE
//	m_print.Item[3].ToolBarItemVisible     = TRUE
//	m_print.Item[4].ToolBarItemVisible     = TRUE
	w_shipping_dock.dw_pallet_info.Visible = FALSE
	w_shipping_dock.dw_view_boxes_on_pallet.visible = FALSE
	w_shipping_dock.st_pallet.visible      			= FALSE
// the below 1 line inc by gph on 5/28 at 2.16 pm for deactivating exit button
	w_shipping_dock.p_1.visible      		= FALSE
	w_shipping_dock.bPalletVisible         			= FALSE
	w_shipping_dock.sle_orig_pallet_tare.visible 	= FALSE
Else
	w_shipping_dock.dw_pallet_info.Visible = TRUE
// the below 2 lines rem'd by gph on 5/28 at 2.16 pm as it was not required
//	m_createpallet.ToolbarItemText         = "Finish"
//	m_createpallet.ToolbarItemName         = "custom071!"
//	m_delete.ToolbarItemVISIBLE            = FALSE
//	m_print.ToolbarItemVISIBLE             = FALSE
//	m_print.Item[1].ToolBarItemVisible     = FALSE
//	m_print.Item[2].ToolBarItemVisible     = FALSE
//	m_print.Item[3].ToolBarItemVisible     = FALSE
//	m_print.Item[4].ToolBarItemVisible     = FALSE
	w_shipping_dock.st_pallet.visible      = TRUE
	w_shipping_dock.TriggerEvent("create_new_pallet")
	w_shipping_dock.bPalletVisible         = TRUE
End If
end event

on m_createpallet.create
call super::create
this.text = "&Create Pallet~tAlt+C"
this.shortcut = 579
this.microhelp = "Create a pallet (super object)"
this.toolbaritemname = "CreateRuntime!"
this.toolbaritemdownname = "Custom071!"
this.toolbaritemtext = "Crt Pallet"
this.toolbaritemorder = 20
end on

on m_createpallet.destroy
call super::destroy
end on

type m_manulscan from menu within m_operation
end type

event clicked;w_shipping_dock.TriggerEvent("manul_scan")

//w_shipping_dock.bManualScanObj	= (Not w_shipping_dock.bManualScanObj)

If w_shipping_dock.bManualScanObj then
	m_manulscan.ToolbarItemText = "StopScan"
	m_scantruck.ToolbarItemVisible				= FALSE
	m_delete.ToolbarItemVISIBLE            	= FALSE
	m_print.ToolbarItemVISIBLE             	= FALSE
	m_print.Item[1].ToolBarItemVisible     	= FALSE
	m_print.Item[2].ToolBarItemVisible     	= FALSE
	m_print.Item[3].ToolBarItemVisible     	= FALSE
	m_print.Item[4].ToolBarItemVisible     	= FALSE
	m_operation.m_reconcile.ToolBarItemVisible= FALSE
Else
	m_manulscan.ToolbarItemText = "ScanBox"
	m_delete.ToolbarItemVISIBLE            = TRUE
	m_scantruck.ToolbarItemVisible			= TRUE
	m_print.ToolbarItemVISIBLE             = TRUE
	m_print.Item[1].ToolBarItemVisible     = TRUE
	m_print.Item[2].ToolBarItemVisible     = TRUE
	m_print.Item[3].ToolBarItemVisible     = TRUE
	m_print.Item[4].ToolBarItemVisible     = TRUE
	m_reconcile.ToolBarItemVisible			= TRUE
End If


end event

on m_manulscan.create
call super::create
this.text = "&Manual Stage~tAlt+M"
this.shortcut = 589
this.microhelp = "Manully Stage boxes"
this.toolbaritemname = "Custom040!"
this.toolbaritemtext = "ScanBox"
this.toolbaritemorder = 30
end on

on m_manulscan.destroy
call super::destroy
end on

type m_delete from menu within m_operation
end type

on clicked;w_shipping_dock.TriggerEvent("edit_qty")
end on

on m_delete.create
call super::create
this.text = "C&hange Qty~tAlt+H"
this.shortcut = 584
this.microhelp = "Change quantity required"
this.toolbaritemname = "EditStops!"
this.toolbaritemtext = "Edit"
this.toolbaritemorder = 40
end on

on m_delete.destroy
call super::destroy
end on

type m_reconcile from menu within m_operation
end type

on clicked;w_shipping_dock.TriggerEvent("reconcile")
end on

on m_reconcile.create
call super::create
this.text = "&Reconcile~tAlt+R"
this.shortcut = 594
this.microhelp = "Reconcile quantity on shipper detail"
this.toolbaritemname = "Custom045!"
this.toolbaritemtext = "Reconcile"
this.toolbaritemorder = 10
end on

on m_reconcile.destroy
call super::destroy
end on

type m_note from menu within m_operation
end type

on clicked;w_shipping_dock.TriggerEvent("show_note")
end on

on m_note.create
call super::create
this.text = "Part &Note~tAlt+N"
this.shortcut = 590
this.microhelp = "Display Note for Line Item"
this.toolbaritemvisible = false
this.toolbaritemorder = 45
end on

on m_note.destroy
call super::destroy
end on

type m_relable from menu within m_operation
end type

on clicked;w_shipping_dock.TriggerEvent("relabel")
end on

on m_relable.create
call super::create
this.text = "Re&label~tAlt+L"
this.shortcut = 588
end on

on m_relable.destroy
call super::destroy
end on

type m_printsetup from menu within m_operation
end type

on clicked;PrintSetup()
end on

on m_printsetup.create
call super::create
this.text = "Print &Setup~tAlt+P"
this.shortcut = 592
this.microhelp = "Printer Setup"
this.toolbaritemname = "Print!"
this.toolbaritemtext = "Setup"
this.toolbaritemorder = 60
end on

on m_printsetup.destroy
call super::destroy
end on

type m_shippinginfo from menu within m_operation
end type

on clicked;w_shipping_dock.TriggerEvent("edit_shipper_header")
end on

on m_shippinginfo.create
call super::create
this.text = "Shipping &Info~tAlt+I"
this.shortcut = 585
this.microhelp = "Edit Shipping Information in Header Section"
this.toolbaritemname = "truck.bmp"
this.toolbaritemtext = "Info"
this.toolbaritemorder = 50
end on

on m_shippinginfo.destroy
call super::destroy
end on

type m_print from menu within m_operation
m_certs m_certs
m_destinationlabel m_destinationlabel
m_picklist m_picklist
m_packlist m_packlist
m_pltlabel m_pltlabel
m_customform m_customform
end type

on m_print.create
call super::create
this.text = "&Print~tAlt+P"
this.shortcut = 592
this.toolbaritemtext = "Print "
this.toolbaritemorder = 50
this.m_certs=create m_certs
this.m_destinationlabel=create m_destinationlabel
this.m_picklist=create m_picklist
this.m_packlist=create m_packlist
this.m_pltlabel=create m_pltlabel
this.m_customform=create m_customform
this.Item[UpperBound(this.Item)+1]=this.m_certs
this.Item[UpperBound(this.Item)+1]=this.m_destinationlabel
this.Item[UpperBound(this.Item)+1]=this.m_picklist
this.Item[UpperBound(this.Item)+1]=this.m_packlist
this.Item[UpperBound(this.Item)+1]=this.m_pltlabel
this.Item[UpperBound(this.Item)+1]=this.m_customform
end on

on m_print.destroy
call super::destroy
destroy(this.m_certs)
destroy(this.m_destinationlabel)
destroy(this.m_picklist)
destroy(this.m_packlist)
destroy(this.m_pltlabel)
destroy(this.m_customform)
end on

type m_certs from menu within m_print
end type

on clicked;w_shipping_dock.TriggerEvent("print_certs")
end on

on m_certs.create
call super::create
this.text = "Certs"
end on

on m_certs.destroy
call super::destroy
end on

type m_destinationlabel from menu within m_print
end type

on clicked;OpenWithParm(w_std_ship_label, w_shipping_dock.szDestination)
end on

on m_destinationlabel.create
call super::create
this.text = "Destination Label"
end on

on m_destinationlabel.destroy
call super::destroy
end on

type m_picklist from menu within m_print
end type

on clicked;w_shipping_dock.TriggerEvent("print_picklist")
//OpenWithParm(w_print_picklist, w_shipping_dock.iShipper)
end on

on m_picklist.create
call super::create
this.text = "Pick List"
this.microhelp = "Print Pick List"
this.toolbaritemname = "Custom004!"
this.toolbaritemtext = "PickList"
this.toolbaritemorder = 70
end on

on m_picklist.destroy
call super::destroy
end on

type m_packlist from menu within m_print
end type

on clicked;w_shipping_dock.TriggerEvent("print_shipper")
end on

on m_packlist.create
call super::create
this.text = "Pack List"
this.microhelp = "Print shipper"
this.toolbaritemname = "Copy!"
this.toolbaritemtext = "PackList"
this.toolbaritemorder = 90
end on

on m_packlist.destroy
call super::destroy
end on

type m_pltlabel from menu within m_print
end type

on clicked;w_shipping_dock.TriggerEvent("print_pallet_label")
end on

on m_pltlabel.create
call super::create
this.text = "Pallet Label"
this.microhelp = "Print Pallet Labe"
this.toolbaritemname = "Center!"
this.toolbaritemtext = "Plt Label"
this.toolbaritemorder = 80
end on

on m_pltlabel.destroy
call super::destroy
end on

type m_customform from menu within m_print
end type

on clicked;w_shipping_dock.TriggerEvent("print_custom_form")
end on

on m_customform.create
call super::create
this.text = "Custom Form"
this.microhelp = "Print custom form"
this.toolbaritemname = "Custom003!"
this.toolbaritemtext = "Custom"
this.toolbaritemorder = 100
end on

on m_customform.destroy
call super::destroy
end on

type m_scantruck from menu within m_operation
end type

on clicked;w_shipping_dock.TriggerEvent("Scan_to_truck")
end on

on m_scantruck.create
call super::create
this.text = "Ship &Out~tAlt+T"
this.shortcut = 596
this.microhelp = "Scan shipment to truck"
this.toolbaritemname = "Export!"
this.toolbaritemtext = "ShipOut"
this.toolbaritemorder = 110
end on

on m_scantruck.destroy
call super::destroy
end on

type m_verifyscan from menu within m_operation
end type

event clicked;w_shipping_dock.TriggerEvent("ue_verifyScan")
end event

on m_verifyscan.create
call super::create
this.text = "&VerifyScan~tAlt+V"
this.shortcut = 598
this.microhelp = "Verify the Scanned objects"
this.toolbaritemname = "Custom038!"
this.toolbaritemtext = "Verify Scan"
this.toolbaritemorder = 115
end on

on m_verifyscan.destroy
call super::destroy
end on

type m_custom1 from menu within m_operation
end type

on m_custom1.create
call super::create
this.visible = false
this.text = "Custom&1"
this.toolbaritemvisible = false
this.toolbaritemname = "Custom042!"
this.toolbaritemtext = "Custom"
this.toolbaritemorder = 120
end on

event clicked;f_execute_custom_menu ("monitor.shipdock1")
end event

on m_custom1.destroy
call super::destroy
end on

type m_custom2 from menu within m_operation
end type

on m_custom2.create
call super::create
this.visible = false
this.text = "Custom&2"
this.toolbaritemvisible = false
this.toolbaritemname = "Custom042!"
this.toolbaritemorder = 130
end on

event clicked;f_execute_custom_menu ("monitor.shipdock2")
end event

on m_custom2.destroy
call super::destroy
end on

type m_custom3 from menu within m_operation
end type

on m_custom3.create
call super::create
this.visible = false
this.text = "Custom&3"
this.toolbaritemvisible = false
this.toolbaritemname = "Custom042!"
this.toolbaritemorder = 140
end on

event clicked;f_execute_custom_menu ("monitor.shipdock3")
end event

on m_custom3.destroy
call super::destroy
end on

type m_exit from menu within m_operation
end type

on clicked;SetPointer ( Hourglass! )

w_shipping_mdi_screen.ChangeMenu(m_list_of_shippers)
Close(w_shipping_dock)
end on

on m_exit.create
call super::create
this.text = "&Exit~tAlt+E"
this.shortcut = 581
this.microhelp = "Exit"
this.toolbaritemname = "Exit!"
this.toolbaritemtext = "Exit"
end on

on m_exit.destroy
call super::destroy
end on

type m_edit from menu within m_shipping_dock
end type

on m_edit.create
call super::create
this.text = "&Edit"
end on

on m_edit.destroy
call super::destroy
end on

type m_window from menu within m_shipping_dock
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m_- m_-
m_arrangeicons m_arrangeicons
end type

on m_window.create
call super::create
this.text = "&Window"
this.m_tile=create m_tile
this.m_layer=create m_layer
this.m_cascade=create m_cascade
this.m_-=create m_-
this.m_arrangeicons=create m_arrangeicons
this.Item[UpperBound(this.Item)+1]=this.m_tile
this.Item[UpperBound(this.Item)+1]=this.m_layer
this.Item[UpperBound(this.Item)+1]=this.m_cascade
this.Item[UpperBound(this.Item)+1]=this.m_-
this.Item[UpperBound(this.Item)+1]=this.m_arrangeicons
end on

on m_window.destroy
call super::destroy
destroy(this.m_tile)
destroy(this.m_layer)
destroy(this.m_cascade)
destroy(this.m_-)
destroy(this.m_arrangeicons)
end on

type m_tile from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Tile! )
end event

on m_tile.create
call super::create
this.text = "&Tile"
this.microhelp = "Tile WIndows..."
end on

on m_tile.destroy
call super::destroy
end on

type m_layer from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Layer! )
end event

on m_layer.create
call super::create
this.text = "&Layer"
this.microhelp = "Layer Windows..."
end on

on m_layer.destroy
call super::destroy
end on

type m_cascade from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Cascade! )
end event

on m_cascade.create
call super::create
this.text = "&Cascade"
this.microhelp = "Cascade Windows..."
end on

on m_cascade.destroy
call super::destroy
end on

type m_- from menu within m_window
end type

on m_-.create
call super::create
this.text = "-"
end on

on m_-.destroy
call super::destroy
end on

type m_arrangeicons from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Icons! )
end event

on m_arrangeicons.create
call super::create
this.text = "Arrange &Icons"
this.microhelp = "Arrange Icons..."
end on

on m_arrangeicons.destroy
call super::destroy
end on

type m_help from menu within m_shipping_dock
m_contents m_contents
m_aboutthemonitor m_aboutthemonitor
end type

on m_help.create
call super::create
this.text = "&Help"
this.m_contents=create m_contents
this.m_aboutthemonitor=create m_aboutthemonitor
this.Item[UpperBound(this.Item)+1]=this.m_contents
this.Item[UpperBound(this.Item)+1]=this.m_aboutthemonitor
end on

on m_help.destroy
call super::destroy
destroy(this.m_contents)
destroy(this.m_aboutthemonitor)
end on

type m_contents from menu within m_help
end type

event clicked;ShowHelp ( "monapphelp.hlp", Topic!, 4001 )
end event

on m_contents.create
call super::create
this.text = "&Contents~tF1"
this.shortcut = 112
this.microhelp = "Displays Help Contents..."
end on

on m_contents.destroy
call super::destroy
end on

type m_aboutthemonitor from menu within m_help
end type

event clicked;open (w_about)
end event

on m_aboutthemonitor.create
call super::create
this.text = "&About The Monitor..."
this.microhelp = "Displays the program information and copyright..."
end on

on m_aboutthemonitor.destroy
call super::destroy
end on

