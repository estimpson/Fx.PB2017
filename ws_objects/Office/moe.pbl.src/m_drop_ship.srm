$PBExportHeader$m_drop_ship.srm
forward
global type m_drop_ship from menu
end type
type m_file from menu within m_drop_ship
end type
type m_create from menu within m_file
end type
type m__1 from menu within m_file
end type
type m_exit from menu within m_file
end type
type m_file from menu within m_drop_ship
m_create m_create
m__1 m__1
m_exit m_exit
end type
type m_edit from menu within m_drop_ship
end type
type m_edit from menu within m_drop_ship
end type
type m_window from menu within m_drop_ship
end type
type m_tile from menu within m_window
end type
type m_layer from menu within m_window
end type
type m_cascade from menu within m_window
end type
type m__ from menu within m_window
end type
type m_arrangeicons from menu within m_window
end type
type m_window from menu within m_drop_ship
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m__ m__
m_arrangeicons m_arrangeicons
end type
type m_help from menu within m_drop_ship
end type
type m_contents from menu within m_help
end type
type m_aboutthemonitor from menu within m_help
end type
type m_help from menu within m_drop_ship
m_contents m_contents
m_aboutthemonitor m_aboutthemonitor
end type
end forward

global type m_drop_ship from menu
m_file m_file
m_edit m_edit
m_window m_window
m_help m_help
end type
global m_drop_ship m_drop_ship

on m_drop_ship.create
m_drop_ship=this
this.m_file=create m_file
this.m_edit=create m_edit
this.m_window=create m_window
this.m_help=create m_help
this.Item[]={this.m_file, &
this.m_edit, &
this.m_window, &
this.m_help}
end on

on m_drop_ship.destroy
destroy(this.m_file)
destroy(this.m_edit)
destroy(this.m_window)
destroy(this.m_help)
end on

type m_file from menu within m_drop_ship
m_create m_create
m__1 m__1
m_exit m_exit
end type

on m_file.create
this.Text="&File"
this.m_create=create m_create
this.m__1=create m__1
this.m_exit=create m_exit
this.Item[]={this.m_create, &
this.m__1, &
this.m_exit}
end on

on m_file.destroy
destroy(this.m_create)
destroy(this.m__1)
destroy(this.m_exit)
end on

type m_create from menu within m_file
end type

on clicked;//w_drop_ship.TriggerEvent ( "create_drop_ship" )
w_smart_dropship_processor.TriggerEvent( "reconcile")
end on

on m_create.create
this.Text="&Reconcile"
this.Microhelp="Reconcile Order/Po details"
this.ToolBarItemName="CreateLibrary!"
this.ToolBarItemText="Reconcile"
this.ToolBarItemOrder=2
end on

type m__1 from menu within m_file
end type

on m__1.create
this.Text="-"
end on

type m_exit from menu within m_file
end type

on clicked;Window wActiveSheet

wActiveSheet = gnv_App.of_GetFrame().GetActiveSheet ( )

If IsValid ( wActiveSheet ) Then
	Close ( wActiveSheet )
Else
	Close ( gnv_App.of_GetFrame() )
End if

end on

on m_exit.create
this.Text="E&xit~tAlt+X"
this.Microhelp="Exit..."
this.ToolBarItemName="Exit!"
this.ToolBarItemText="Exit"
this.Shortcut=600
end on

type m_edit from menu within m_drop_ship
end type

on m_edit.create
this.Text="&Edit"
end on

on m_edit.destroy
end on

type m_window from menu within m_drop_ship
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m__ m__
m_arrangeicons m_arrangeicons
end type

on m_window.create
this.Text="&Window"
this.m_tile=create m_tile
this.m_layer=create m_layer
this.m_cascade=create m_cascade
this.m__=create m__
this.m_arrangeicons=create m_arrangeicons
this.Item[]={this.m_tile, &
this.m_layer, &
this.m_cascade, &
this.m__, &
this.m_arrangeicons}
end on

on m_window.destroy
destroy(this.m_tile)
destroy(this.m_layer)
destroy(this.m_cascade)
destroy(this.m__)
destroy(this.m_arrangeicons)
end on

type m_tile from menu within m_window
end type

on clicked;gnv_App.of_GetFrame().ArrangeSheets ( Tile! )

end on

on m_tile.create
this.Text="&Tile"
end on

type m_layer from menu within m_window
end type

on clicked;gnv_App.of_GetFrame().ArrangeSheets ( Layer! )
end on

on m_layer.create
this.Text="&Layer"
end on

type m_cascade from menu within m_window
end type

on clicked;gnv_App.of_GetFrame().ArrangeSheets ( Cascade! )
end on

on m_cascade.create
this.Text="&Cascade"
end on

type m__ from menu within m_window
end type

on m__.create
this.Text="-"
end on

type m_arrangeicons from menu within m_window
end type

on clicked;gnv_App.of_GetFrame().ArrangeSheets ( Icons! )
end on

on m_arrangeicons.create
this.Text="Arrange &Icons"
end on

type m_help from menu within m_drop_ship
m_contents m_contents
m_aboutthemonitor m_aboutthemonitor
end type

on m_help.create
this.Text="&Help"
this.m_contents=create m_contents
this.m_aboutthemonitor=create m_aboutthemonitor
this.Item[]={this.m_contents, &
this.m_aboutthemonitor}
end on

on m_help.destroy
destroy(this.m_contents)
destroy(this.m_aboutthemonitor)
end on

type m_contents from menu within m_help
end type

event clicked;ShowHelp ( "monapphelp.hlp", Topic!, 4503 )
end event

on m_contents.create
this.Text="&Contents~tF1"
this.Microhelp="Displays help contents"
this.Shortcut=112
end on

type m_aboutthemonitor from menu within m_help
end type

event clicked;Open ( w_about )
end event

on m_aboutthemonitor.create
this.Text="&About The Monitor..."
this.Microhelp="Displays the program information and copyright"
end on

