$PBExportHeader$m_pricing_main.srm
forward
global type m_pricing_main from menu
end type
type m_file from menu within m_pricing_main
end type
type m_matrix from menu within m_file
end type
type m_category from menu within m_file
end type
type m_- from menu within m_file
end type
type m_close from menu within m_file
end type
type m_file from menu within m_pricing_main
m_matrix m_matrix
m_category m_category
m_- m_-
m_close m_close
end type
type m_edit from menu within m_pricing_main
end type
type m_window from menu within m_pricing_main
end type
type m_tile from menu within m_window
end type
type m_layer from menu within m_window
end type
type m_cascade from menu within m_window
end type
type m_-1 from menu within m_window
end type
type m_arrangeicons from menu within m_window
end type
type m_window from menu within m_pricing_main
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m_-1 m_-1
m_arrangeicons m_arrangeicons
end type
type m_help from menu within m_pricing_main
end type
global type m_pricing_main from menu
m_file m_file
m_edit m_edit
m_window m_window
m_help m_help
end type
end forward

global type m_pricing_main from menu
m_file m_file
m_edit m_edit
m_window m_window
m_help m_help
end type
global m_pricing_main m_pricing_main

on m_pricing_main.create
m_pricing_main=this
call super::create
this.m_file=create m_file
this.m_edit=create m_edit
this.m_window=create m_window
this.m_help=create m_help
this.Item[UpperBound(this.Item)+1]=this.m_file
this.Item[UpperBound(this.Item)+1]=this.m_edit
this.Item[UpperBound(this.Item)+1]=this.m_window
this.Item[UpperBound(this.Item)+1]=this.m_help
end on

on m_pricing_main.destroy
call super::destroy
destroy(this.m_file)
destroy(this.m_edit)
destroy(this.m_window)
destroy(this.m_help)
end on

type m_file from menu within m_pricing_main
m_matrix m_matrix
m_category m_category
m_- m_-
m_close m_close
end type

on m_file.create
call super::create
this.text = "&File"
this.m_matrix=create m_matrix
this.m_category=create m_category
this.m_-=create m_-
this.m_close=create m_close
this.Item[UpperBound(this.Item)+1]=this.m_matrix
this.Item[UpperBound(this.Item)+1]=this.m_category
this.Item[UpperBound(this.Item)+1]=this.m_-
this.Item[UpperBound(this.Item)+1]=this.m_close
end on

on m_file.destroy
call super::destroy
destroy(this.m_matrix)
destroy(this.m_category)
destroy(this.m_-)
destroy(this.m_close)
end on

type m_matrix from menu within m_file
end type

on clicked;OpenSheet ( w_orders_customer_price_matrix, gnv_App.of_GetFrame(), 3, Original! )
end on

on m_matrix.create
call super::create
this.text = "&Matrix Pricing~tAlt+M"
this.shortcut = 589
this.microhelp = "Customer Matrix Pricing"
this.toolbaritemname = "Custom059!"
this.toolbaritemtext = "Matrix"
this.toolbaritemorder = 1
end on

on m_matrix.destroy
call super::destroy
end on

type m_category from menu within m_file
end type

on clicked;SetPointer ( HourGlass! )

OpenSheet( w_customer_category_pricing, gnv_App.of_GetFrame(), 3, Original! )
end on

on m_category.create
call super::create
this.text = "&Category Pricing~tAlt+C"
this.shortcut = 579
this.microhelp = "Customer Category Pricing"
this.toolbaritemname = "Cursor!"
this.toolbaritemtext = "Category"
this.toolbaritemorder = 2
end on

on m_category.destroy
call super::destroy
end on

type m_- from menu within m_file
end type

on m_-.create
call super::create
this.text = "-"
end on

on m_-.destroy
call super::destroy
end on

type m_close from menu within m_file
end type

event clicked;Close(gnv_App.of_GetFrame().GetActiveSheet())
end event

on m_close.create
call super::create
this.text = "Close"
this.toolbaritemname = "Close!"
this.toolbaritemtext = "Close"
this.toolbaritemorder = 9999
this.toolbaritemspace = 1
end on

on m_close.destroy
call super::destroy
end on

type m_edit from menu within m_pricing_main
end type

on m_edit.create
call super::create
this.text = "&Edit"
end on

on m_edit.destroy
call super::destroy
end on

type m_window from menu within m_pricing_main
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m_-1 m_-1
m_arrangeicons m_arrangeicons
end type

on m_window.create
call super::create
this.text = "&Window"
this.m_tile=create m_tile
this.m_layer=create m_layer
this.m_cascade=create m_cascade
this.m_-1=create m_-1
this.m_arrangeicons=create m_arrangeicons
this.Item[UpperBound(this.Item)+1]=this.m_tile
this.Item[UpperBound(this.Item)+1]=this.m_layer
this.Item[UpperBound(this.Item)+1]=this.m_cascade
this.Item[UpperBound(this.Item)+1]=this.m_-1
this.Item[UpperBound(this.Item)+1]=this.m_arrangeicons
end on

on m_window.destroy
call super::destroy
destroy(this.m_tile)
destroy(this.m_layer)
destroy(this.m_cascade)
destroy(this.m_-1)
destroy(this.m_arrangeicons)
end on

type m_tile from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Tile! )
end event

on m_tile.create
call super::create
this.text = "&Tile"
end on

on m_tile.destroy
call super::destroy
end on

type m_layer from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Layer! )
end event

on m_layer.create
call super::create
this.text = "&Layer"
end on

on m_layer.destroy
call super::destroy
end on

type m_cascade from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Cascade! )
end event

on m_cascade.create
call super::create
this.text = "&Cascade"
end on

on m_cascade.destroy
call super::destroy
end on

type m_-1 from menu within m_window
end type

on m_-1.create
call super::create
this.text = "-"
end on

on m_-1.destroy
call super::destroy
end on

type m_arrangeicons from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Icons! )
end event

on m_arrangeicons.create
call super::create
this.text = "&Arrange Icons"
end on

on m_arrangeicons.destroy
call super::destroy
end on

type m_help from menu within m_pricing_main
end type

on m_help.create
call super::create
this.text = "&Help"
end on

on m_help.destroy
call super::destroy
end on

