$PBExportHeader$m_customreport.srm
forward
global type m_customreport from menu
end type
type m_file from menu within m_customreport
end type
type m_print from menu within m_file
end type
type m_printpreview from menu within m_file
end type
type m_- from menu within m_file
end type
type m_saverows from menu within m_file
end type
type m_close from menu within m_file
end type
type m_file from menu within m_customreport
m_print m_print
m_printpreview m_printpreview
m_- m_-
m_saverows m_saverows
m_close m_close
end type
type m_edit from menu within m_customreport
end type
type m_refresh from menu within m_edit
end type
type m_edit from menu within m_customreport
m_refresh m_refresh
end type
type m_help from menu within m_customreport
end type
global type m_customreport from menu
m_file m_file
m_edit m_edit
m_help m_help
end type
end forward

global type m_customreport from menu
m_file m_file
m_edit m_edit
m_help m_help
end type
global m_customreport m_customreport

on m_customreport.create
m_customreport=this
call super::create
this.text = "m_customreport"
this.m_file=create m_file
this.m_edit=create m_edit
this.m_help=create m_help
this.Item[UpperBound(this.Item)+1]=this.m_file
this.Item[UpperBound(this.Item)+1]=this.m_edit
this.Item[UpperBound(this.Item)+1]=this.m_help
end on

on m_customreport.destroy
call super::destroy
destroy(this.m_file)
destroy(this.m_edit)
destroy(this.m_help)
end on

type m_file from menu within m_customreport
m_print m_print
m_printpreview m_printpreview
m_- m_-
m_saverows m_saverows
m_close m_close
end type

on m_file.create
call super::create
this.text = "&File"
this.m_print=create m_print
this.m_printpreview=create m_printpreview
this.m_-=create m_-
this.m_saverows=create m_saverows
this.m_close=create m_close
this.Item[UpperBound(this.Item)+1]=this.m_print
this.Item[UpperBound(this.Item)+1]=this.m_printpreview
this.Item[UpperBound(this.Item)+1]=this.m_-
this.Item[UpperBound(this.Item)+1]=this.m_saverows
this.Item[UpperBound(this.Item)+1]=this.m_close
end on

on m_file.destroy
call super::destroy
destroy(this.m_print)
destroy(this.m_printpreview)
destroy(this.m_-)
destroy(this.m_saverows)
destroy(this.m_close)
end on

type m_print from menu within m_file
end type

on m_print.create
call super::create
this.text = "&Print~tCtrl+P"
this.shortcut = 336
this.toolbaritemname = "Print!"
this.toolbaritemtext = "Print"
end on

on m_print.destroy
call super::destroy
end on

event clicked;
ParentWindow.dynamic event Print()

end event

type m_printpreview from menu within m_file
end type

event clicked;
ParentWindow.dynamic event PrintPreview()

end event

on m_printpreview.create
call super::create
this.text = "Print Preview"
this.toolbaritemname = "Preview!"
this.toolbaritemtext = "Preview"
end on

on m_printpreview.destroy
call super::destroy
end on

type m_- from menu within m_file
end type

on m_-.create
call super::create
this.text = "-"
end on

on m_-.destroy
call super::destroy
end on

type m_saverows from menu within m_file
end type

event clicked;
ParentWindow.dynamic event SaveRows()

end event

on m_saverows.create
call super::create
this.text = "&Save Rows~tF11"
this.shortcut = 122
this.toolbaritemname = "OutputNext!"
this.toolbaritemtext = "Save Rows"
end on

on m_saverows.destroy
call super::destroy
end on

type m_close from menu within m_file
end type

on m_close.create
call super::create
this.text = "&Close"
this.toolbaritemname = "Close!"
this.toolbaritemtext = "Close"
this.toolbaritemorder = 9999
this.toolbaritemspace = 1
end on

on m_close.destroy
call super::destroy
end on

event clicked;
Close(ParentWindow)

end event

type m_edit from menu within m_customreport
m_refresh m_refresh
end type

on m_edit.create
call super::create
this.text = "&Edit"
this.m_refresh=create m_refresh
this.Item[UpperBound(this.Item)+1]=this.m_refresh
end on

on m_edit.destroy
call super::destroy
destroy(this.m_refresh)
end on

type m_refresh from menu within m_edit
end type

on m_refresh.create
call super::create
this.text = "Refresh"
this.toolbaritemname = "Continue!"
this.toolbaritemtext = "Refresh"
end on

on m_refresh.destroy
call super::destroy
end on

event clicked;
ParentWindow.dynamic event Refresh()

end event

type m_help from menu within m_customreport
end type

on m_help.create
call super::create
this.text = "&Help"
end on

on m_help.destroy
call super::destroy
end on

