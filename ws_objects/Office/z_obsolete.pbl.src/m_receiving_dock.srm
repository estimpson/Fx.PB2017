$PBExportHeader$m_receiving_dock.srm
forward
global type m_receiving_dock from menu
end type
type m_file from menu within m_receiving_dock
end type
type m_inquiry from menu within m_file
end type
type m_newpallet from menu within m_file
end type
type m_rmasystem from menu within m_file
end type
type m_autoreceive from menu within m_file
end type
type m_receive from menu within m_file
end type
type m_delete from menu within m_file
end type
type m_file from menu within m_receiving_dock
m_inquiry m_inquiry
m_newpallet m_newpallet
m_rmasystem m_rmasystem
m_autoreceive m_autoreceive
m_receive m_receive
m_delete m_delete
end type
type m_edit from menu within m_receiving_dock
end type
type m_showgrid from menu within m_edit
end type
type m_showrecvpopup from menu within m_edit
end type
type m_edit from menu within m_receiving_dock
m_showgrid m_showgrid
m_showrecvpopup m_showrecvpopup
end type
type m_window from menu within m_receiving_dock
end type
type m_tile from menu within m_window
end type
type m_layer from menu within m_window
end type
type m_cascade from menu within m_window
end type
type m_- from menu within m_window
end type
type m_arrangeicons from menu within m_window
end type
type m_window from menu within m_receiving_dock
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m_- m_-
m_arrangeicons m_arrangeicons
end type
type m_help from menu within m_receiving_dock
end type
type m_contents from menu within m_help
end type
type m_aboutthemonitor from menu within m_help
end type
type m_help from menu within m_receiving_dock
m_contents m_contents
m_aboutthemonitor m_aboutthemonitor
end type
global type m_receiving_dock from menu
m_file m_file
m_edit m_edit
m_window m_window
m_help m_help
end type
end forward

global type m_receiving_dock from menu
m_file m_file
m_edit m_edit
m_window m_window
m_help m_help
end type
global m_receiving_dock m_receiving_dock

forward prototypes
public subroutine mf_display (boolean ab_mode)
end prototypes

public subroutine mf_display (boolean ab_mode);if ab_mode then
	this.m_edit.m_showgrid.enabled = true
   this.m_file.m_receive.enabled = true
else
	this.m_edit.m_showgrid.enabled = false
   this.m_file.m_receive.enabled = false
end if

end subroutine

on m_receiving_dock.create
m_receiving_dock=this
call super::create
this.m_file=create m_file
this.m_edit=create m_edit
this.m_window=create m_window
this.m_help=create m_help
this.Item[UpperBound(this.Item)+1]=this.m_file
this.Item[UpperBound(this.Item)+1]=this.m_edit
this.Item[UpperBound(this.Item)+1]=this.m_window
this.Item[UpperBound(this.Item)+1]=this.m_help
end on

on m_receiving_dock.destroy
call super::destroy
destroy(this.m_file)
destroy(this.m_edit)
destroy(this.m_window)
destroy(this.m_help)
end on

type m_file from menu within m_receiving_dock
m_inquiry m_inquiry
m_newpallet m_newpallet
m_rmasystem m_rmasystem
m_autoreceive m_autoreceive
m_receive m_receive
m_delete m_delete
end type

on m_file.create
call super::create
this.text = "&File"
this.mergeoption = filemenu!
this.m_inquiry=create m_inquiry
this.m_newpallet=create m_newpallet
this.m_rmasystem=create m_rmasystem
this.m_autoreceive=create m_autoreceive
this.m_receive=create m_receive
this.m_delete=create m_delete
this.Item[UpperBound(this.Item)+1]=this.m_inquiry
this.Item[UpperBound(this.Item)+1]=this.m_newpallet
this.Item[UpperBound(this.Item)+1]=this.m_rmasystem
this.Item[UpperBound(this.Item)+1]=this.m_autoreceive
this.Item[UpperBound(this.Item)+1]=this.m_receive
this.Item[UpperBound(this.Item)+1]=this.m_delete
end on

on m_file.destroy
call super::destroy
destroy(this.m_inquiry)
destroy(this.m_newpallet)
destroy(this.m_rmasystem)
destroy(this.m_autoreceive)
destroy(this.m_receive)
destroy(this.m_delete)
end on

type m_inquiry from menu within m_file
end type

on clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("inquiry")
end on

on m_inquiry.create
call super::create
this.text = "&Inquiry~tAlt+I"
this.shortcut = 585
this.microhelp = "Receiving Schedule Inquiry"
this.toolbaritemname = "Custom023!"
this.toolbaritemtext = "Inquiry"
this.toolbaritemorder = 2
end on

on m_inquiry.destroy
call super::destroy
end on

type m_newpallet from menu within m_file
end type

on clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("new_pallet")
end on

on m_newpallet.create
call super::create
this.visible = false
this.text = "&New Pallet~tAlt+N"
this.shortcut = 590
this.microhelp = "Create New Pallet"
this.toolbaritemvisible = false
this.toolbaritemname = "pallet.bmp"
this.toolbaritemtext = "New Plt"
this.toolbaritemorder = 2
end on

on m_newpallet.destroy
call super::destroy
end on

type m_rmasystem from menu within m_file
end type

on clicked;OpenSheet ( w_rma_receive_object, gnv_App.of_GetFrame(), 3, Layered! )
end on

on m_rmasystem.create
call super::create
this.text = "&RMA System"
this.microhelp = "Return to Inventory"
this.toolbaritemname = "CheckIn!"
this.toolbaritemtext = "RMA"
this.toolbaritemorder = 2
end on

on m_rmasystem.destroy
call super::destroy
end on

type m_autoreceive from menu within m_file
end type

on clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("ue_quick_receive")
end on

on m_autoreceive.create
call super::create
this.text = "&Outside Objects"
this.microhelp = "Receive outside processed boxes by scanning serial number..."
this.toolbaritemname = "ArrangeTables!"
this.toolbaritemtext = "OutSerial"
this.toolbaritemorder = 2
end on

on m_autoreceive.destroy
call super::destroy
end on

type m_receive from menu within m_file
end type

on m_receive.create
call super::create
this.text = "Receive"
this.enabled = false
this.microhelp = "Receive Objects"
this.toolbaritemname = "ExecuteSQL5!"
this.toolbaritemtext = "Receive"
this.toolbaritemorder = 10
end on

event clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("ue_ReceiveTrans")
end event

on m_receive.destroy
call super::destroy
end on

type m_delete from menu within m_file
end type

event clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("ue_reverse_receipt")
end event

on m_delete.create
call super::create
this.text = "Delete"
this.microhelp = "Delete Objects"
this.toolbaritemname = "Custom021!"
this.toolbaritemtext = "Delete"
this.toolbaritemorder = 15
end on

on m_delete.destroy
call super::destroy
end on

type m_edit from menu within m_receiving_dock
m_showgrid m_showgrid
m_showrecvpopup m_showrecvpopup
end type

on m_edit.create
call super::create
this.text = "&View"
this.m_showgrid=create m_showgrid
this.m_showrecvpopup=create m_showrecvpopup
this.Item[UpperBound(this.Item)+1]=this.m_showgrid
this.Item[UpperBound(this.Item)+1]=this.m_showrecvpopup
end on

on m_edit.destroy
call super::destroy
destroy(this.m_showgrid)
destroy(this.m_showrecvpopup)
end on

type m_showgrid from menu within m_edit
end type

event clicked;enabled = false
m_receiving_dock.m_edit.m_showrecvpopup.enabled = false
m_file.m_receive.enabled = false

gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("ue_show_grid")
end event

on m_showgrid.create
call super::create
this.text = "Show Grid"
this.enabled = false
this.microhelp = "Display Grid "
this.toolbaritemname = "Custom059!"
this.toolbaritemtext = "Show Grid"
this.toolbaritemorder = 9
end on

on m_showgrid.destroy
call super::destroy
end on

type m_showrecvpopup from menu within m_edit
end type

event clicked;enabled = false
m_receiving_dock.m_edit.m_showgrid.enabled = true
m_receiving_dock.m_file.m_receive.enabled = true

gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("ue_recv_popup")
end event

on m_showrecvpopup.create
call super::create
this.text = "Show Recv Popup"
this.enabled = false
this.microhelp = "Display Receive Popup"
this.toolbaritemname = "SetNextStatement!"
this.toolbaritemtext = "Show Recv"
this.toolbaritemorder = 9
end on

on m_showrecvpopup.destroy
call super::destroy
end on

type m_window from menu within m_receiving_dock
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m_- m_-
m_arrangeicons m_arrangeicons
end type

on m_window.create
call super::create
this.text = "&Window"
this.m_tile=create m_tile
this.m_layer=create m_layer
this.m_cascade=create m_cascade
this.m_-=create m_-
this.m_arrangeicons=create m_arrangeicons
this.Item[UpperBound(this.Item)+1]=this.m_tile
this.Item[UpperBound(this.Item)+1]=this.m_layer
this.Item[UpperBound(this.Item)+1]=this.m_cascade
this.Item[UpperBound(this.Item)+1]=this.m_-
this.Item[UpperBound(this.Item)+1]=this.m_arrangeicons
end on

on m_window.destroy
call super::destroy
destroy(this.m_tile)
destroy(this.m_layer)
destroy(this.m_cascade)
destroy(this.m_-)
destroy(this.m_arrangeicons)
end on

type m_tile from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Tile! )
end event

on m_tile.create
call super::create
this.text = "&Tile"
this.microhelp = "Tile Windows..."
end on

on m_tile.destroy
call super::destroy
end on

type m_layer from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Layer! )
end event

on m_layer.create
call super::create
this.text = "&Layer"
this.microhelp = "Layer Windows..."
end on

on m_layer.destroy
call super::destroy
end on

type m_cascade from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Cascade! )
end event

on m_cascade.create
call super::create
this.text = "&Cascade"
this.microhelp = "Cascade Windows..."
end on

on m_cascade.destroy
call super::destroy
end on

type m_- from menu within m_window
end type

on m_-.create
call super::create
this.text = "-"
end on

on m_-.destroy
call super::destroy
end on

type m_arrangeicons from menu within m_window
end type

event clicked;gnv_App.of_GetFrame().ArrangeSheets ( Icons! )
end event

on m_arrangeicons.create
call super::create
this.text = "Arrange &Icons"
this.microhelp = "Arrange Icons..."
end on

on m_arrangeicons.destroy
call super::destroy
end on

type m_help from menu within m_receiving_dock
m_contents m_contents
m_aboutthemonitor m_aboutthemonitor
end type

on m_help.create
call super::create
this.text = "&Help"
this.m_contents=create m_contents
this.m_aboutthemonitor=create m_aboutthemonitor
this.Item[UpperBound(this.Item)+1]=this.m_contents
this.Item[UpperBound(this.Item)+1]=this.m_aboutthemonitor
end on

on m_help.destroy
call super::destroy
destroy(this.m_contents)
destroy(this.m_aboutthemonitor)
end on

type m_contents from menu within m_help
end type

event clicked;ShowHelp ( "monapphelp.hlp", Topic!, 2001 )
end event

on m_contents.create
call super::create
this.text = "&Contents~tF1"
this.shortcut = 112
this.microhelp = "Displays Help Contents..."
end on

on m_contents.destroy
call super::destroy
end on

type m_aboutthemonitor from menu within m_help
end type

event clicked;Open ( w_about )
end event

on m_aboutthemonitor.create
call super::create
this.text = "&About The Monitor..."
this.microhelp = "Displays the program information and copyright..."
end on

on m_aboutthemonitor.destroy
call super::destroy
end on

