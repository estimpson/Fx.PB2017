$PBExportHeader$f_get_token.srf
$PBExportComments$General string parser
global type f_get_token from function_object
end type

forward prototypes
global function string f_get_token (ref string source, string separator)
end prototypes

global function string f_get_token (ref string source, string separator);// String Function f_GET_TOKEN (ref string Source, string Separator)

// The function Get_Token receive, as arguments, the string from which
// the token is to be stripped off, from the left, and the separator
// character.  If the separator character does not appear in the string,
// it returns the entire string.  Otherwise, it returns the token, not
// including the separator character.  In either case, the source string
// is truncated on the left, by the length of the token and separator
// character, if any.


int 		p
string 	ret

p = PosA(source, separator)	// Get the position of the separator

if p = 0 then					// if no separator, 
	ret = source				// return the whole source string and
	source = ""					// make the original source of zero length
else
	ret = MidA(source, 1, p - 1)	// otherwise, return just the token and
	source = RightA(source, LenA(source) - p)	// strip it & the separator
end if

return ret
end function

