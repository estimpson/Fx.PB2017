$PBExportHeader$m_ic30_main.srm
forward
global type m_ic30_main from menu
end type
type m_file from menu within m_ic30_main
end type
type m_objectinquiry from menu within m_file
end type
type m_audittrail from menu within m_file
end type
type m_parts from menu within m_file
end type
type m_outsideproc from menu within m_file
end type
type m_physicalinventory from menu within m_file
end type
type m_custom1 from menu within m_file
end type
type m_custom2 from menu within m_file
end type
type m_custom3 from menu within m_file
end type
type m_line11 from menu within m_file
end type
type m_exit from menu within m_file
end type
type m_file from menu within m_ic30_main
m_objectinquiry m_objectinquiry
m_audittrail m_audittrail
m_parts m_parts
m_outsideproc m_outsideproc
m_physicalinventory m_physicalinventory
m_custom1 m_custom1
m_custom2 m_custom2
m_custom3 m_custom3
m_line11 m_line11
m_exit m_exit
end type
type m_edit from menu within m_ic30_main
end type
type m_edit from menu within m_ic30_main
end type
type m_window from menu within m_ic30_main
end type
type m_tile from menu within m_window
end type
type m_layer from menu within m_window
end type
type m_cascade from menu within m_window
end type
type m_line31 from menu within m_window
end type
type m_arrangeicons from menu within m_window
end type
type m_window from menu within m_ic30_main
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m_line31 m_line31
m_arrangeicons m_arrangeicons
end type
type m_help from menu within m_ic30_main
end type
type m_contents from menu within m_help
end type
type m_aboutthemonitor from menu within m_help
end type
type m_help from menu within m_ic30_main
m_contents m_contents
m_aboutthemonitor m_aboutthemonitor
end type
end forward

global type m_ic30_main from menu
m_file m_file
m_edit m_edit
m_window m_window
m_help m_help
end type
global m_ic30_main m_ic30_main

on m_ic30_main.create
m_ic30_main=this
this.m_file=create m_file
this.m_edit=create m_edit
this.m_window=create m_window
this.m_help=create m_help
this.Item[]={this.m_file, &
this.m_edit, &
this.m_window, &
this.m_help}
end on

on m_ic30_main.destroy
destroy(this.m_file)
destroy(this.m_edit)
destroy(this.m_window)
destroy(this.m_help)
end on

type m_file from menu within m_ic30_main
m_objectinquiry m_objectinquiry
m_audittrail m_audittrail
m_parts m_parts
m_outsideproc m_outsideproc
m_physicalinventory m_physicalinventory
m_custom1 m_custom1
m_custom2 m_custom2
m_custom3 m_custom3
m_line11 m_line11
m_exit m_exit
end type

on m_file.create
this.Text="&File"
this.m_objectinquiry=create m_objectinquiry
this.m_audittrail=create m_audittrail
this.m_parts=create m_parts
this.m_outsideproc=create m_outsideproc
this.m_physicalinventory=create m_physicalinventory
this.m_custom1=create m_custom1
this.m_custom2=create m_custom2
this.m_custom3=create m_custom3
this.m_line11=create m_line11
this.m_exit=create m_exit
this.Item[]={this.m_objectinquiry, &
this.m_audittrail, &
this.m_parts, &
this.m_outsideproc, &
this.m_physicalinventory, &
this.m_custom1, &
this.m_custom2, &
this.m_custom3, &
this.m_line11, &
this.m_exit}
end on

on m_file.destroy
destroy(this.m_objectinquiry)
destroy(this.m_audittrail)
destroy(this.m_parts)
destroy(this.m_outsideproc)
destroy(this.m_physicalinventory)
destroy(this.m_custom1)
destroy(this.m_custom2)
destroy(this.m_custom3)
destroy(this.m_line11)
destroy(this.m_exit)
end on

type m_objectinquiry from menu within m_file
end type

event clicked;//w_ic_main.bMenuItemClicked = True
//iCurInst = iCurInst + 1
//OpenSheetWithParm ( wInst[iCurInst], "dw_object_inquiry", szInquiry, gnv_App.of_GetFrame(), 3, Original! )

int	li_retval
li_retval = f_moduleaccess('0101','01') 
if li_retval = 0 then 
	OpenSheet ( w_object_inquiry, gnv_App.of_GetFrame(), 3, Original! )
elseif li_retval > 0 then
	Messagebox ( Monsys.msg_title, "Sorry, access denied to the selected Menu")
end if 	


end event

on m_objectinquiry.create
this.Text="&Object Inquiry"
this.Microhelp="Object Inquiry..."
this.ToolBarItemName="CreateRuntime!"
this.ToolBarItemText="Objects"
this.ToolBarItemOrder=2
end on

type m_audittrail from menu within m_file
end type

event clicked;//w_ic_main.bMenuItemClicked = True
//iCurInst = iCurInst + 1
//OpenSheetWithParm ( wInst[iCurInst], "dw_audit_trail_std", szInquiry, gnv_App.of_GetFrame(), 3, Original! )

int	li_retval
li_retval = f_moduleaccess('0101','02') 
if li_retval = 0 then 
	OpenSheet ( w_audit_trail_inquiry, gnv_App.of_GetFrame(), 3, Original! )
elseif li_retval > 0 then
	Messagebox ( Monsys.msg_title, "Sorry, access denied to the selected Menu")
end if 	



end event

on m_audittrail.create
this.Text="&Audit Trail"
this.Microhelp="Audit Trail"
this.ToolBarItemName="Cascade!"
this.ToolBarItemText="Audit Trail"
this.ToolBarItemOrder=3
end on

type m_parts from menu within m_file
end type

event clicked;//iCurInst = iCurInst + 1
//OpenSheetWithParm ( wInst[iCurInst], "d_part_inquiry", szInquiry, gnv_App.of_GetFrame(), 3, Original! )

int	li_retval
li_retval = f_moduleaccess('0101','03') 
if li_retval = 0 then 
	OpenSheet ( w_part_inquiry_ic, gnv_App.of_GetFrame(), 3, Original! )
elseif li_retval > 0 then
	Messagebox ( Monsys.msg_title, "Sorry, access denied to the selected Menu")
end if 	

end event

on m_parts.create
this.Text="&Parts"
this.Microhelp="Part Inquiry..."
this.ToolBarItemName="CheckStatus!"
this.ToolBarItemText="Parts"
this.ToolBarItemOrder=4
end on

type m_outsideproc from menu within m_file
end type

event clicked;
int	li_retval
li_retval = f_moduleaccess('0101','04') 
if li_retval = 0 then 
	OpenSheet ( w_ic_outside_part_list, gnv_App.of_GetFrame(), 3, Original! )
elseif li_retval > 0 then
	Messagebox ( Monsys.msg_title, "Sorry, access denied to the selected Menu")
end if 	


end event

on m_outsideproc.create
this.Text="&Outside Proc"
this.Microhelp="Outside Process"
this.ToolBarItemName="Custom044!"
this.ToolBarItemText="Outside"
this.ToolBarItemOrder=5
end on

type m_physicalinventory from menu within m_file
end type

event clicked;
int	li_retval
li_retval = f_moduleaccess('0101','05') 
if li_retval = 0 then 
	OpenSheet(w_physical_inventory, gnv_App.of_GetFrame(), 3, Original!)
elseif li_retval > 0 then
	Messagebox ( Monsys.msg_title, "Sorry, access denied to the selected Menu")
end if 	


end event

on m_physicalinventory.create
this.Text="P&hysical Inventory"
this.Microhelp="Performance physical inventory"
this.ToolBarItemName="ArrangeTables!"
this.ToolBarItemText="PhyInv"
this.ToolBarItemOrder=6
end on

type m_custom1 from menu within m_file
end type

on clicked;f_execute_custom_menu ( "monitor.icmain1" )
end on

on m_custom1.create
this.Text="Custom&1"
this.ToolBarItemName="Custom042!"
this.ToolBarItemText="Custom"
this.Visible=false
this.ToolBarItemVisible=false
this.ToolBarItemOrder=20
end on

type m_custom2 from menu within m_file
end type

on clicked;f_execute_custom_menu ( "monitor.icmain2" )
end on

on m_custom2.create
this.Text="Custom&2"
this.ToolBarItemName="Custom042!"
this.ToolBarItemText="Custom"
this.Visible=false
this.ToolBarItemVisible=false
this.ToolBarItemOrder=21
end on

type m_custom3 from menu within m_file
end type

on clicked;f_execute_custom_menu ( "monitor.icmain3" )
end on

on m_custom3.create
this.Text="Custom&3"
this.ToolBarItemName="Custom042!"
this.ToolBarItemText="Custom"
this.Visible=false
this.ToolBarItemVisible=false
this.ToolBarItemOrder=22
end on

type m_line11 from menu within m_file
end type

on m_line11.create
this.Text="-"
end on

type m_exit from menu within m_file
end type

on clicked;//  Declare Variables
Window wActiveSheet

//  Initialize Variables
wActiveSheet = gnv_App.of_GetFrame().GetActiveSheet ( )

//  If active sheet is title then close main
If IsValid ( wActiveSheet ) Then

	gnv_App.of_GetFrame().SetMicroHelp ( "Close Window" )

	Close ( wActiveSheet )

	gnv_App.of_GetFrame().SetMicroHelp ( "" )

Else

	close ( gnv_App.of_GetFrame() )

End if
end on

on m_exit.create
this.Text="E&xit"
this.Microhelp="Exit Inventory Inquiries..."
this.ToolBarItemName="Exit!"
this.ToolBarItemText="Exit"
this.ToolBarItemOrder=1
end on

type m_edit from menu within m_ic30_main
end type

on m_edit.create
this.Text="&Edit"
end on

on m_edit.destroy
end on

type m_window from menu within m_ic30_main
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m_line31 m_line31
m_arrangeicons m_arrangeicons
end type

on m_window.create
this.Text="&Window"
this.m_tile=create m_tile
this.m_layer=create m_layer
this.m_cascade=create m_cascade
this.m_line31=create m_line31
this.m_arrangeicons=create m_arrangeicons
this.Item[]={this.m_tile, &
this.m_layer, &
this.m_cascade, &
this.m_line31, &
this.m_arrangeicons}
end on

on m_window.destroy
destroy(this.m_tile)
destroy(this.m_layer)
destroy(this.m_cascade)
destroy(this.m_line31)
destroy(this.m_arrangeicons)
end on

type m_tile from menu within m_window
end type

on clicked;//gnv_App.of_GetFrame().ArrangeSheets ( Tile! )
end on

on m_tile.create
this.Text="&Tile"
end on

type m_layer from menu within m_window
end type

on clicked;//gnv_App.of_GetFrame().ArrangeSheets ( Layer! )
end on

on m_layer.create
this.Text="&Layer"
end on

type m_cascade from menu within m_window
end type

on clicked;//gnv_App.of_GetFrame().ArrangeSheets ( Cascade! )
end on

on m_cascade.create
this.Text="&Cascade"
end on

type m_line31 from menu within m_window
end type

on m_line31.create
this.Text="-"
end on

type m_arrangeicons from menu within m_window
end type

on clicked;//gnv_App.of_GetFrame().ArrangeSheets ( Icons! )
end on

on m_arrangeicons.create
this.Text="Arrange &Icons"
end on

type m_help from menu within m_ic30_main
m_contents m_contents
m_aboutthemonitor m_aboutthemonitor
end type

on m_help.create
this.Text="&Help"
this.m_contents=create m_contents
this.m_aboutthemonitor=create m_aboutthemonitor
this.Item[]={this.m_contents, &
this.m_aboutthemonitor}
end on

on m_help.destroy
destroy(this.m_contents)
destroy(this.m_aboutthemonitor)
end on

type m_contents from menu within m_help
end type

event clicked;ShowHelp ( "monapphelp.hlp", Topic!, 3 )
end event

on m_contents.create
this.Text="&Contents~tF1"
this.Microhelp="Displays help contents"
this.Shortcut=112
end on

type m_aboutthemonitor from menu within m_help
end type

event clicked;Open ( w_about )
end event

on m_aboutthemonitor.create
this.Text="&About The Monitor..."
this.Microhelp="Displays the program information and copyright"
end on

