$PBExportHeader$m_ic_outside_reconcile.srm
forward
global type m_ic_outside_reconcile from menu
end type
type m_file from menu within m_ic_outside_reconcile
end type
type m_recon from menu within m_file
end type
type m_scrap from menu within m_file
end type
type m_adjcum from menu within m_file
end type
type m_save from menu within m_file
end type
type m_- from menu within m_file
end type
type m_close from menu within m_file
end type
type m_0 from menu within m_file
end type
type m_file from menu within m_ic_outside_reconcile
m_recon m_recon
m_scrap m_scrap
m_adjcum m_adjcum
m_save m_save
m_- m_-
m_close m_close
m_0 m_0
end type
type m_edit from menu within m_ic_outside_reconcile
end type
type m_window from menu within m_ic_outside_reconcile
end type
type m_tile from menu within m_window
end type
type m_layer from menu within m_window
end type
type m_cascade from menu within m_window
end type
type m__ from menu within m_window
end type
type m_arrangeicons from menu within m_window
end type
type m_window from menu within m_ic_outside_reconcile
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m__ m__
m_arrangeicons m_arrangeicons
end type
type m_help from menu within m_ic_outside_reconcile
end type
global type m_ic_outside_reconcile from menu
m_file m_file
m_edit m_edit
m_window m_window
m_help m_help
end type
end forward

global type m_ic_outside_reconcile from menu
m_file m_file
m_edit m_edit
m_window m_window
m_help m_help
end type
global m_ic_outside_reconcile m_ic_outside_reconcile

on m_ic_outside_reconcile.create
m_ic_outside_reconcile=this
call super::create
this.m_file=create m_file
this.m_edit=create m_edit
this.m_window=create m_window
this.m_help=create m_help
this.Item[UpperBound(this.Item)+1]=this.m_file
this.Item[UpperBound(this.Item)+1]=this.m_edit
this.Item[UpperBound(this.Item)+1]=this.m_window
this.Item[UpperBound(this.Item)+1]=this.m_help
end on

on m_ic_outside_reconcile.destroy
call super::destroy
destroy(this.m_file)
destroy(this.m_edit)
destroy(this.m_window)
destroy(this.m_help)
end on

type m_file from menu within m_ic_outside_reconcile
m_recon m_recon
m_scrap m_scrap
m_adjcum m_adjcum
m_save m_save
m_- m_-
m_close m_close
m_0 m_0
end type

on m_file.create
call super::create
this.text = "&File"
this.m_recon=create m_recon
this.m_scrap=create m_scrap
this.m_adjcum=create m_adjcum
this.m_save=create m_save
this.m_-=create m_-
this.m_close=create m_close
this.m_0=create m_0
this.Item[UpperBound(this.Item)+1]=this.m_recon
this.Item[UpperBound(this.Item)+1]=this.m_scrap
this.Item[UpperBound(this.Item)+1]=this.m_adjcum
this.Item[UpperBound(this.Item)+1]=this.m_save
this.Item[UpperBound(this.Item)+1]=this.m_-
this.Item[UpperBound(this.Item)+1]=this.m_close
this.Item[UpperBound(this.Item)+1]=this.m_0
end on

on m_file.destroy
call super::destroy
destroy(this.m_recon)
destroy(this.m_scrap)
destroy(this.m_adjcum)
destroy(this.m_save)
destroy(this.m_-)
destroy(this.m_close)
destroy(this.m_0)
end on

type m_recon from menu within m_file
end type

event clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("reconcile")
end event

on m_recon.create
call super::create
this.text = "&Recon"
this.microhelp = "Reconcile the quantity"
this.toolbaritemname = "Custom060!"
this.toolbaritemtext = "Recon"
this.toolbaritemorder = 1
end on

on m_recon.destroy
call super::destroy
end on

type m_scrap from menu within m_file
end type

event clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("scrap")
end event

on m_scrap.create
call super::create
this.text = "&Scrap"
this.microhelp = "Scrap the qty lost to audit trail"
this.toolbaritemname = "Custom047!"
this.toolbaritemtext = "Scrap"
this.toolbaritemorder = 2
end on

on m_scrap.destroy
call super::destroy
end on

type m_adjcum from menu within m_file
end type

event clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("adjust_cum")
end event

on m_adjcum.create
call super::create
this.text = "&AdjCum"
this.microhelp = "Adjust the cum shipped"
this.toolbaritemname = "Compute!"
this.toolbaritemtext = "AdjCum"
this.toolbaritemorder = 3
end on

on m_adjcum.destroy
call super::destroy
end on

type m_save from menu within m_file
end type

event clicked;gnv_App.of_GetFrame().GetActiveSheet().TriggerEvent("save_change")
end event

on m_save.create
call super::create
this.text = "Sa&ve"
this.microhelp = "Save the cum change"
this.toolbaritemname = "Update!"
this.toolbaritemtext = "Save"
this.toolbaritemorder = 4
end on

on m_save.destroy
call super::destroy
end on

type m_- from menu within m_file
end type

on m_-.create
call super::create
this.text = "-"
end on

on m_-.destroy
call super::destroy
end on

type m_close from menu within m_file
end type

event clicked;gnv_App.of_GetFrame().GetActiveSheet().triggerevent ( "ue_exit" )
end event

on m_close.create
call super::create
this.text = "Close"
this.toolbaritemname = "Close!"
this.toolbaritemtext = "Close"
this.toolbaritemorder = 9999
this.toolbaritemspace = 1
end on

on m_close.destroy
call super::destroy
end on

type m_0 from menu within m_file
end type

on m_0.create
call super::create
end on

on m_0.destroy
call super::destroy
end on

type m_edit from menu within m_ic_outside_reconcile
end type

on m_edit.create
call super::create
this.text = "&Edit"
end on

on m_edit.destroy
call super::destroy
end on

type m_window from menu within m_ic_outside_reconcile
m_tile m_tile
m_layer m_layer
m_cascade m_cascade
m__ m__
m_arrangeicons m_arrangeicons
end type

on m_window.create
call super::create
this.text = "&Window"
this.m_tile=create m_tile
this.m_layer=create m_layer
this.m_cascade=create m_cascade
this.m__=create m__
this.m_arrangeicons=create m_arrangeicons
this.Item[UpperBound(this.Item)+1]=this.m_tile
this.Item[UpperBound(this.Item)+1]=this.m_layer
this.Item[UpperBound(this.Item)+1]=this.m_cascade
this.Item[UpperBound(this.Item)+1]=this.m__
this.Item[UpperBound(this.Item)+1]=this.m_arrangeicons
end on

on m_window.destroy
call super::destroy
destroy(this.m_tile)
destroy(this.m_layer)
destroy(this.m_cascade)
destroy(this.m__)
destroy(this.m_arrangeicons)
end on

type m_tile from menu within m_window
end type

on clicked;gnv_App.of_GetFrame().ArrangeSheets (Tile!)
end on

on m_tile.create
call super::create
this.text = "&Tile"
end on

on m_tile.destroy
call super::destroy
end on

type m_layer from menu within m_window
end type

on clicked;gnv_App.of_GetFrame().ArrangeSheets (Layer!)
end on

on m_layer.create
call super::create
this.text = "&Layer"
end on

on m_layer.destroy
call super::destroy
end on

type m_cascade from menu within m_window
end type

on clicked;gnv_App.of_GetFrame().ArrangeSheets (Cascade!)
end on

on m_cascade.create
call super::create
this.text = "&Cascade"
end on

on m_cascade.destroy
call super::destroy
end on

type m__ from menu within m_window
end type

on m__.create
call super::create
this.text = "-"
end on

on m__.destroy
call super::destroy
end on

type m_arrangeicons from menu within m_window
end type

on clicked;gnv_App.of_GetFrame().ArrangeSheets (Icons!)
end on

on m_arrangeicons.create
call super::create
this.text = "Arrange &Icons"
end on

on m_arrangeicons.destroy
call super::destroy
end on

type m_help from menu within m_ic_outside_reconcile
end type

on m_help.create
call super::create
this.text = "&Help"
end on

on m_help.destroy
call super::destroy
end on

